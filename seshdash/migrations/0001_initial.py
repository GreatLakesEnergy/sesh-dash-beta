# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2015-12-27 09:30
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Alert_Rule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_field', models.CharField(choices=[(b'battery_voltage', b'battery voltage'), (b'soc', b'System State of Charge'), (b'AC_output', b'AC Loads'), (b'pv_production', b'Solar Energy Produced'), (b'main_on', b'Grid Availible'), (b'genset_state', b'Generator on')], max_length=100)),
                ('value', models.FloatField()),
                ('operator', models.CharField(choices=[(b'eq', b'equals'), (b'lt', b'less than'), (b'gt', b'greater than')], default=b'lt', max_length=2)),
                ('send_mail', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'System Alert Rule',
                'verbose_name_plural': 'System Alert Rules',
            },
        ),
        migrations.CreateModel(
            name='BoM_Data_Point',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('soc', models.FloatField()),
                ('battery_voltage', models.FloatField()),
                ('AC_Voltage_in', models.FloatField(default=0)),
                ('AC_Voltage_out', models.FloatField(default=0)),
                ('AC_input', models.FloatField()),
                ('AC_output', models.FloatField()),
                ('AC_Load_in', models.FloatField()),
                ('AC_Load_out', models.FloatField()),
                ('pv_production', models.FloatField(default=0)),
                ('inverter_state', models.CharField(max_length=100)),
                ('main_on', models.BooleanField(default=False)),
                ('genset_state', models.CharField(max_length=100)),
                ('relay_state', models.CharField(max_length=100)),
                ('trans', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Data Point',
            },
        ),
        migrations.CreateModel(
            name='Daily_Data_Point',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('daily_pv_yield', models.FloatField(default=0)),
                ('daily_power_consumption', models.FloatField(default=0)),
                ('daily_battery_charge', models.FloatField(default=0)),
                ('date', models.DateTimeField()),
            ],
            options={
                'verbose_name': 'Daily Aggregate Data Point',
            },
        ),
        migrations.CreateModel(
            name='Sesh_Alert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('isSilence', models.BooleanField()),
                ('alertSent', models.BooleanField()),
                ('alert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seshdash.Alert_Rule')),
            ],
            options={
                'verbose_name': 'System Alert',
                'verbose_name_plural': 'System Alerts',
            },
        ),
        migrations.CreateModel(
            name='SESH_RMC_Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('API_KEY', models.CharField(default=b'', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Sesh_Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(max_length=100)),
                ('comission_date', models.DateTimeField(verbose_name=b'date comissioned')),
                ('location_city', models.CharField(max_length=100)),
                ('location_country', models.CharField(max_length=100)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('installed_kw', models.FloatField()),
                ('number_of_pv_strings', models.IntegerField()),
                ('Number_of_panels', models.IntegerField()),
                ('battery_bank_capacity', models.IntegerField()),
                ('has_genset', models.BooleanField()),
                ('has_grid', models.BooleanField()),
            ],
            options={
                'verbose_name': 'Sesh Site',
                'verbose_name_plural': 'Sesh Sites',
                'permissions': (('view_Sesh_Site', 'View Sesh Site'),),
            },
        ),
        migrations.CreateModel(
            name='Sesh_User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Site_Weather_Data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(unique_for_date=True, verbose_name=b'date')),
                ('temp', models.IntegerField()),
                ('condition', models.CharField(max_length=20)),
                ('cloud_cover', models.FloatField()),
                ('sunrise', models.TimeField()),
                ('sunset', models.TimeField()),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seshdash.Sesh_Site')),
            ],
            options={
                'verbose_name': 'Weather Data',
            },
        ),
        migrations.CreateModel(
            name='Trend_Data_Point',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pv_yield', models.FloatField(default=0)),
                ('battery_usage', models.FloatField(default=0)),
                ('system_efficiency', models.FloatField(default=0)),
                ('system_capacity', models.FloatField(default=0)),
                ('battery_efficieny', models.FloatField(default=0)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seshdash.Sesh_Site')),
            ],
        ),
        migrations.CreateModel(
            name='VRM_Account',
            fields=[
                ('vrm_user_id', models.CharField(default=b'', max_length=100,  primary_key=True,)),
                ('vrm_password', models.CharField(default=b'', max_length=100)),
                ('vrm_site_id', models.CharField(default=b'', max_length=20)),
            ],
        ),
        migrations.AddField(
            model_name='sesh_site',
            name='vrm_account',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='seshdash.VRM_Account'),
        ),
        migrations.AddField(
            model_name='sesh_alert',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seshdash.Sesh_Site'),
        ),
        migrations.AddField(
            model_name='daily_data_point',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seshdash.Sesh_Site'),
        ),
        migrations.AddField(
            model_name='bom_data_point',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seshdash.Sesh_Site'),
        ),
        migrations.AddField(
            model_name='alert_rule',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seshdash.Sesh_Site'),
        ),
        migrations.AlterUniqueTogether(
            name='site_weather_data',
            unique_together=set([('site', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='daily_data_point',
            unique_together=set([('site', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='bom_data_point',
            unique_together=set([('site', 'time')]),
        ),
    ]
